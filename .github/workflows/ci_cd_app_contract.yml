name: App Contract
run-name: ${{ github.actor }} is deploy App Contract 🚀
on:
  push:
    branches: [feature/PROY**, fix/FIX**, app-test/**]
    paths:
      - 'app_contract/**'
jobs:
  test-app-contract:
    name: Correr-test
    if: ${{ contains(github.event.head_commit.message, 'app_contract') }}
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}

    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2

      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Instalación de app_company
        run: |
          python -m pip install --upgrade pip
          pip install -r app_contract/requirements.txt

      - name: Correr pruebas app_company
        id: correr-pruebas-usuarios
        if: ${{ contains(github.event.head_commit.message, 'app_company') }}
        run: |
          cd app_contract
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=70

      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"


  ci-app-contract:
    name: Build and push to GCP
    needs: test-app-contract
    runs-on: ubuntu-latest

    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: code checkout
      uses: actions/checkout@v2

    - name: install the gcloud cli
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: build and push the docker image
      env:
        GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
        IMAGE_NAME: contract
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        cd app_contract
        gcloud auth configure-docker us-central1-docker.pkg.dev
        docker build -t $IMAGE_NAME:latest .
        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest 
        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG 
        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest 
        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG 


  cd-app-contract:
    name: Deploy to GCP k8s
    needs: [test-app-contract, ci-app-contract]
    runs-on: ubuntu-latest

    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}

    steps:

      - name: code checkout
        uses: actions/checkout@v2

      - name: install the gcloud cli
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: deploy to gke
        env:
          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
        run: |
          cd deployment
          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-contract-deployment.yaml
          kubectl apply -f k8s-app-contract-deployment.yaml
          kubectl rollout restart deployment/contract

  merge-branch-develop:
    name: Merge-dev
    needs: [test-app-contract, ci-app-contract]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Branch name
        run: |
          echo running on branch ${GITHUB_REF##*/}
      - name: Mezcla ${GITHUB_REF##*/} -> develop
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: develop
          message: Merge ${GITHUB_REF##*/} into develop
          github_token: ${{ secrets.GITHUB_TOKEN }}


  tags:
    needs: [test-app-contract, ci-app-contract]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: name branch
        id: name_branch
        run: echo "NAME_BRANCH=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          append_to_pre_release_tag:
          custom_tag: 3.28.8-${{ steps.name_branch.outputs.NAME_BRANCH }}

  codecov:
    name: upload coverage codecov
    if: ${{ contains(github.event.head_commit.message, 'app_contract') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: candidate_db
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Instalación de app_contract
        run: |
          python -m pip install --upgrade pip
          pip install -r app_contract/requirements.txt

      - name: Correr pruebas app_contract
        id: correr-pruebas-usuarios
        run: |
          export TEST_APP=True
          pytest --cov=app_contract app_contract/test_contract.py --cov-report=xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}