name: Deploy Master
run-name: ${{ github.actor }} is Deploy Master ðŸš€âš—ðŸ”®ðŸ¤–
on:
  push:
    branches: [develop]
    paths:
      - 'setup/**'
jobs:
  Crear-Release:
    name: Crear-release
    if:  ${{ contains(github.event.head_commit.message, 'RELEASE') }}
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Crear rama
        id: crear-rama
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        env:
          MENSAJE_RELEASE: Se creo la rama release
        run: |
          git checkout -b release
          git push -f -u origin release
          echo "::set-output name=respuesta::${MENSAJE_RELEASE}"

  merege-release-desarrollo:
    name: Merge-desarrolo
    needs: Crear-Release
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: Mezcla release -> develop
      if: echo ${{needs.Merge-desarrolo.outputs.salida}}
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: develop
        target-branch: release
      env:
        MENSAJE_MERGE: Se unieron las ramas

  correr-test-backend-apps:
    name: Correr-test
    needs: merege-release-desarrollo
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: ConfiguraciÃ³n de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: candidate_db

      - name: ConfiguraciÃ³n de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: InstalaciÃ³n de app_candidate
        run: |
          python -m pip install --upgrade pip
          pip install -r app_candidate/requirements.txt

      - name: Correr pruebas app_candidate
        id: correr-pruebas-app_candidate
        run: |
          cd app_candidate
          pytest --cov=. -v -s --cov-fail-under=70

      - name: InstalaciÃ³n de app_company
        run: |
          python -m pip install --upgrade pip
          pip install -r app_company/requirements.txt

      - name: Correr pruebas app_company
        id: correr-pruebas-app_company
        run: |
          cd app_company
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=70

      - name: InstalaciÃ³n de app_projects
        run: |
          python -m pip install --upgrade pip
          pip install -r app_project/requirements.txt

      - name: Correr pruebas app_projects
        id: correr-pruebas-app_projects
        run: |
          cd app_project
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=70

      - name: InstalaciÃ³n de app_search_tool
        run: |
          python -m pip install --upgrade pip
          pip install -r app_search_tool/requirements.txt

      - name: Correr pruebas app_search_tool
        id: correr-pruebas-app_search_tool
        run: |
          cd app_search_tool
          pytest --cov=. -v -s --cov-fail-under=70

      - name: InstalaciÃ³n de app_selection_process
        run: |
          python -m pip install --upgrade pip
          pip install -r app_selection_process/requirements.txt

      - name: Correr pruebas app_selection_process
        id: correr-pruebas-selection_process
        run: |
          cd app_selection_process
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=70

      - name: InstalaciÃ³n de app_performance
        run: |
          python -m pip install --upgrade pip
          pip install -r app_performance/requirements.txt

      - name: Correr pruebas app_performance
        id: correr-pruebas-usuarios
        run: |
          cd app_performance
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=70

      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
     

  merege-release-main:
    name: Merge-main
    needs: correr-test-backend-apps
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: Mezcla ${{ github.ref }} -> develop
      if: echo ${{needs.correr-test-funcionalidad.outputs.salida}}
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: release
        target-branch: main
      env:
        MENSAJE_MERGE: Merge successful

  tags:
    needs: [correr-test-backend-apps, merege-release-main, ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: name branch
        id: name_branch
        run: echo "NAME_BRANCH=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          append_to_pre_release_tag:
          custom_tag: 3.21.4-${{ steps.name_branch.outputs.NAME_BRANCH }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: v3.21.4
          name: v3.21.4
          body: mitad sprint 3
