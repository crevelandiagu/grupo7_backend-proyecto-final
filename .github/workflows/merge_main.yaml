name: Merge Dev
on:
  push:
    branches: [develop]
jobs:
  Crear-Release:
    name: Crear-release
    if:  ${{ contains(github.event.head_commit.message, 'RELEASE') }}
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Crear rama
        id: crear-rama
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        env:
          MENSAJE_RELEASE: Se creo la rama release
        run: |
          git checkout -b release
          git push -f -u origin release
          echo "::set-output name=respuesta::${MENSAJE_RELEASE}"

  merege-release-desarrollo:
    name: Merge-desarrolo
    needs: Crear-Release
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: Mezcla release -> develop
      if: echo ${{needs.Merge-desarrolo.outputs.salida}}
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: develop
        target-branch: release
      env:
        MENSAJE_MERGE: Se unieron las ramas

  correr-test-funcionalidad:
    name: Correr-test
    needs: merege-release-desarrollo
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Instalación de librerías y dependencias-usuarios
        run: |
          python -m pip install --upgrade pip
          pip install -r users/requirements.txt
      - name: Correr pruebas usuarios
        id: correr-pruebas-usuarios
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          cd users
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=80

      - name: Instalación de librerías y dependencias-ofertas
        run: |
          python -m pip install --upgrade pip
          pip install -r offers/requirements.txt
      - name: Correr pruebas oferas
        id: correr-pruebas-ofertas
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          cd offers
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=80

      - name: Instalación de librerías y dependencias-publicaciones
        run: |
          python -m pip install --upgrade pip
          pip install -r servicio_publicaciones/requirements.txt
      - name: Correr pruebas publicaciones
        id: correr-pruebas-publicaciones
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          cd servicio_publicaciones
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=80

      - name: Instalación de librerías y dependencias-trayectos
        run: |
          python -m pip install --upgrade pip
          pip install -r servicio_trayectos/requirements.txt
      - name: Correr pruebas trayectos
        id: correr-pruebas-trayectos
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          cd servicio_trayectos
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=80

      - name: Instalación de librerías y dependencias-public
        run: |
          python -m pip install --upgrade pip
          pip install -r public/requirements.txt
      - name: Correr pruebas public
        id: correr-pruebas-public
        if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
        run: |
          cd public
          export TEST_APP=True
          pytest --cov=. -v -s --cov-fail-under=80

      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
     

  merege-release-main:
    name: Merge-main
    needs: correr-test-funcionalidad
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
    - name: Mezcla ${{ github.ref }} -> develop
      if: echo ${{needs.correr-test-funcionalidad.outputs.salida}}
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: release
        target-branch: main
      env:
        MENSAJE_MERGE: Merge successful

  tags:
    needs: test-app-candidate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: name branch
        id: name_branch
        run: echo "NAME_BRANCH=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          append_to_pre_release_tag:
          custom_tag: 1.1.1-${{ steps.name_branch.outputs.NAME_BRANCH }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: v1.3.0
          name: v1.3.0
          body: sprint 1
