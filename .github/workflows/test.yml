name: App Candidate
run-name: ${{ github.actor }} is Test New CI/CD ðŸš€
on:
  push:
    branches: [RF**, FIX**]

jobs:
  test-app-candidate:
    name: Correr-test
    if: ${{ contains(github.event.head_commit.message, 'test') }}
    runs-on: ubuntu-latest
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}

    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: candidate_db

      - name: ConfiguraciÃ³n de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: InstalaciÃ³n de app_candidate
        run: |
          python -m pip install --upgrade pip
          pip install -r app_candidate/requirements.txt

      - name: Correr pruebas app_candidate
        id: correr-pruebas-usuarios
        if: ${{ contains(github.event.head_commit.message, 'test') }}
        run: |
          cd app_candidate
          pytest --cov=. -v -s --cov-fail-under=70
          pytest --cov-report xml:app_candidate/to/coverage.xml

      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"

  coverage:
    needs: test-app-candidate
    runs-on: ubuntu-latest
    steps:
      - name: Get Cover
        uses: orgoro/coverage@v3.1
        with:
          coverageFile: app_candidate/to/coverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
#  build:
#    needs: test-app-candidate
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: name branch
#        id: name_branch
#        run: echo "NAME_BRANCH=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"
#
#      - name: Bump version and push tag
#        id: tag_version
#        uses: mathieudutour/github-tag-action@v6.1
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          append_to_pre_release_tag:
#          custom_tag: 1.1.1-${{ steps.name_branch.outputs.NAME_BRANCH }}

#      - name: Create a GitHub release
#        uses: ncipollo/release-action@v1
#        with:
#          tag: v1.3.0
#          name: v1.3.0
#          body: sprint 1