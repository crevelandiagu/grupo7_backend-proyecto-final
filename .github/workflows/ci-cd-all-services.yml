name: ${{ github.actor }} TEST SONAR is Build ALL SERVICES ðŸš€âš—ðŸ”®ðŸ¤–
on:
  push:
    branches: [fix/FIX**]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: postgres test
        uses: ikalnytskyi/action-setup-postgres@v4
        with:
          database: candidate_db

      - name: ConfiguraciÃ³n de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: InstalaciÃ³n de app_candidate
        run: |
          python -m pip install --upgrade pip
          pip install -r app_candidate/requirements.txt

      - name: Correr pruebas app_candidate
        id: correr-pruebas-usuarios
        if: ${{ contains(github.event.head_commit.message, 'app_candidate') }}
        run: |
          cd app_candidate
          pytest --cov=. --cov-report=xml -v -s --cov-fail-under=70

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


#name: App Candidate
#run-name: ${{ github.actor }} is deploy ALL SERVICES ðŸš€âš—ðŸ”®ðŸ¤–
#on:
#  push:
#    branches: [fix/FIX**]
#
#jobs:
#
#  ci-app-candidate:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#    - name: code checkout
#      uses: actions/checkout@v2
#
#    - name: install the gcloud cli
#      uses: google-github-actions/setup-gcloud@v0
#      with:
#        project_id: ${{ secrets.PROJECT_ID }}
#        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#        export_default_credentials: true
#
#    - name: build and push the docker image
#      env:
#        GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        IMAGE_NAME: candidate
#        IMAGE_TAG: ${{ github.run_number }}
#      run: |
#        cd app_candidate
#        gcloud auth configure-docker us-central1-docker.pkg.dev
#        docker build -t $IMAGE_NAME:latest .
#        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-candidate:
#    name: Deploy to GCP k8s
#    needs: [ci-app-candidate]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-candidate-deployment.yaml
#          kubectl apply -f k8s-app-candidate-deployment.yaml
#          kubectl rollout restart deployment/candidate
#
#
#
#  ci-app-company:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          export_default_credentials: true
#
#      - name: build and push the docker image
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#          IMAGE_NAME: company
#          IMAGE_TAG: ${{ github.run_number }}
#        run: |
#          cd app_company
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#          docker build -t $IMAGE_NAME:latest .
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-company:
#    name: Deploy to GCP k8s
#    needs: [ci-app-company ]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-company-deployment.yaml
#          kubectl apply -f k8s-app-company-deployment.yaml
#          kubectl rollout restart deployment/company
#
#  ci-app-company-employees:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          export_default_credentials: true
#
#      - name: build and push the docker image
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#          IMAGE_NAME: company-employees
#          IMAGE_TAG: ${{ github.run_number }}
#        run: |
#          cd app_company_employees
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#          docker build -t $IMAGE_NAME:latest .
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-company-employees:
#    name: Deploy to GCP k8s
#    needs: [ci-app-company-employees ]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-company-employees-deployment.yaml
#          kubectl apply -f k8s-app-company-employees-deployment.yaml
#          kubectl rollout restart deployment/company-employees
#
#
#  ci-app-projects:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#    - name: code checkout
#      uses: actions/checkout@v2
#
#    - name: install the gcloud cli
#      uses: google-github-actions/setup-gcloud@v0
#      with:
#        project_id: ${{ secrets.PROJECT_ID }}
#        service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#        export_default_credentials: true
#
#    - name: build and push the docker image
#      env:
#        GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        IMAGE_NAME: projects
#        IMAGE_TAG: ${{ github.run_number }}
#      run: |
#        cd app_project
#        gcloud auth configure-docker us-central1-docker.pkg.dev
#        docker build -t $IMAGE_NAME:latest .
#        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#        docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#        docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-projects:
#    name: Deploy to GCP k8s
#    needs: [ci-app-projects]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-projects-deployment.yaml
#          kubectl apply -f k8s-app-projects-deployment.yaml
#          kubectl rollout restart deployment/projects
#
#  ci-app-search-tool:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          export_default_credentials: true
#
#      - name: build and push the docker image
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#          IMAGE_NAME: search-tool
#          IMAGE_TAG: ${{ github.run_number }}
#        run: |
#          cd app_search_tool
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#          docker build -t $IMAGE_NAME:latest .
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-search-tool:
#    name: Deploy to GCP k8s
#    needs: [ci-app-search-tool ]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-search-deployment.yaml
#          kubectl apply -f k8s-app-search-deployment.yaml
#          kubectl rollout restart deployment/search-tool
#
#  ci-app-selection_process:
#    name: Build and push to GCP
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#    steps:
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.PROJECT_ID }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          export_default_credentials: true
#
#      - name: build and push the docker image
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#          IMAGE_NAME: selection-process
#          IMAGE_TAG: ${{ github.run_number }}
#        run: |
#          cd app_selection_process
#          gcloud auth configure-docker us-central1-docker.pkg.dev
#          docker build -t $IMAGE_NAME:latest .
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker tag $IMAGE_NAME:latest us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:latest
#          docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT/abc-jobs-dockers/$IMAGE_NAME:$IMAGE_TAG
#
#
#  cd-app-selection_process:
#    name: Deploy to GCP k8s
#    needs: [ ci-app-selection_process ]
#    runs-on: ubuntu-latest
#
#    outputs:
#      salida: ${{ steps.imprimir.outputs.respuesta }}
#
#    steps:
#
#      - name: code checkout
#        uses: actions/checkout@v2
#
#      - name: install the gcloud cli
#        uses: google-github-actions/setup-gcloud@v0
#        with:
#          project_id: ${{ secrets.GOOGLE_PROJECT }}
#          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
#          install_components: 'gke-gcloud-auth-plugin'
#          export_default_credentials: true
#
#      - name: deploy to gke
#        env:
#          GOOGLE_PROJECT: ${{ secrets.PROJECT_ID }}
#        run: |
#          cd deployment
#          gcloud container clusters get-credentials autopilot-abc-jobs-k8s --region us-central1  --project $GOOGLE_PROJECT
#          sed -i "s/GOOGLE_PROJECT/$GOOGLE_PROJECT/g" k8s-app-selection-process-deployment.yaml
#          kubectl apply -f k8s-app-selection-process-deployment.yaml
#          kubectl rollout restart deployment/selection-process
