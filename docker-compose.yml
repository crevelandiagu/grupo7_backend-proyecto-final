version: '3'
services:
# -----------------------Servicio candidate -----------------------------
  db_candidate:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: candidate_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - service_candidate

  app_candidate:
    build: app_candidate/
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db_candidate:5432/candidate_db
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      db_candidate:
        condition: service_healthy
    volumes:
      - ./app_candidate:/python-docker
    networks:
      - service_candidate
      - web_global

# -----------------------Servicio company -----------------------------
  db_company:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=company_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - service_company

  app_company:
    build: app_company/
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db_company:5432/company_db
    ports:
      - "3001:3001"
    expose:
      - "3001"
    depends_on:
      db_publicaciones:
        condition: service_healthy
    networks:
      - service_company
      - web_global

## -----------------------Servicio project -----------------------------
  db_project:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=project_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - service_project

  app_trayectos:
    build: app_project/
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db_project:5432/project_db
    ports:
      - "3007:3007"
    expose:
      - "3007"
    depends_on:
      db_trayectos:
        condition: service_healthy
    networks:
      - service_project
      - web_global
### -----------------------Servicio candidate -----------------------------
#  db_usuarios:
#    image: postgres
#    environment:
#      POSTGRES_DB: usuarios_db
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 2s
#      timeout: 5s
#      retries: 5
#    networks:
#      - service_usuarios
#
#  users:
#    build: app_company/
#    environment:
#      DB_NAME: usuarios_db
#      DB_HOST: db_usuarios
#      DB_PORT: 5432
#      DB_USER: postgres
#      DB_PASSWORD: postgres
#    ports:
#      - "3000:3000"
#    expose:
#      - "3000"
#    networks:
#      - service_usuarios
#      - web_global
#    depends_on:
#      db_usuarios:
#        condition: service_healthy
#
### -----------------------Servicio new-service -----------------------------
#
#  new-service:
#    build: app_selection_process/
#    environment:
#      OFFERS_URL: http://app_ofertas:3003/
#      USERS_URL: http://users:3000/
#      POSTS_URL: http://app_publicaciones:3001/
#      ROUTES_URL: http://app_trayectos:3002/
#    ports:
#      - "3010:3010"
#    expose:
#      - "3010"
#    networks:
#      - web_global

networks:
  service_candidate:
  service_company:
  service_project:
  web_global:



